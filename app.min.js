/*! boilerplatenew v1.0.0 | Copyright 2018 Weronika KÄ™dziora */

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var APP_ID = 'd4584fead35834428cb94f902d73bbcc';
var searchButton = document.querySelector('.menu--search');
var locationButton = document.querySelector('.menu--loc');
var input = document.querySelector('.menu__city');
var city = document.querySelector('.name');
var icon = document.querySelector('.icon');
var temp = document.querySelector('.temp');
var hum = document.querySelector('.hum');
var press = document.querySelector('.press');
var windSpeed = document.querySelector('.wind');
var h1 = document.querySelector('.h1');

var getWeathetForLocation = function getWeathetForLocation() {
  var searchForCurrentLacotion = function searchForCurrentLacotion(options) {
    return new Promise(function (resolve, reject) {
      navigator.geolocation.getCurrentPosition(resolve, reject, options);
    });
  };

  searchForCurrentLacotion().then(function (position) {
    var url = "https://api.openweathermap.org/data/2.5/weather?lat=".concat(position.coords.latitude, "&lon=").concat(position.coords.longitude, "&units=metric&appid=").concat(APP_ID);
    h1.innerHTML = "Current weather for your location";
    locationButton.style.display = "none";
    getWeathet(url);
  }).catch(function (err) {
    console.error(err.message);
    alert(err.message);
  });
};

getWeathetForLocation();
locationButton.addEventListener('click', getWeathetForLocation);
searchButton.addEventListener('click', function (e) {
  var cityName = input.value;
  var url = "https://api.openweathermap.org/data/2.5/weather?q=".concat(cityName, "&units=metric&appid=").concat(APP_ID);
  h1.innerHTML = 'Current weather';
  locationButton.innerHTML = "Get weather for your location";
  locationButton.style.display = "block";
  getWeathet(url);
});
input.addEventListener('keyup', function (e) {
  e.keyCode === 13 && searchButton.click();
});

var getWeathet = function getWeathet(url) {
  return fetch(url).then(function (response) {
    if (response.status !== 200) {
      console.error("Status Code: ".concat(response.status));
    }

    return response.json();
  }).then(function (data) {
    var sys = data.sys,
        weather = data.weather,
        main = data.main,
        wind = data.wind;
    city.innerHTML = "".concat(data.name, ", ").concat(sys.country);
    icon.innerHTML = "<img src= 'https://openweathermap.org/img/w/".concat(weather[0].icon, ".png'>");
    temp.innerHTML = "".concat(Math.round(main.temp), "&deg;C");
    hum.innerHTML = "Humidity: ".concat(main.humidity, "%");
    press.innerHTML = "Pressure: ".concat(main.pressure, "hPa");
    windSpeed.innerHTML = "Wind speed: ".concat(wind.speed, "m/s");
  });
};

/***/ })
/******/ ]);